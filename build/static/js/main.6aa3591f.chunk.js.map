{"version":3,"sources":["components/ContactList/ContactList.module.css","fadeModules/fadeAppTitle.module.css","fadeModules/fadeContactFormAlert.module.css","components/Filter/Filter.module.css","fadeModules/fadeContactList.module.css","fadeModules/fadeAppAlert.module.css","fadeModules/fadeFilter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactLis.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid","removeContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","INITIAL_STATE","alert","message","ContactForm","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","validateForm","resetForm","setTimeout","isExistContact","find","contact","this","CSSTransition","in","timeout","classNames","fadeAlert","unmountOnExit","className","s","form","sectionName","label","inputTitle","input","type","onChange","sectionNumber","button","Component","connect","dispatch","contactsActions","ContactListItem","onRemove","contactListItem","contactName","onClick","buttonTitle","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","TransitionGroup","component","contactList","map","fadeStyles","filterInput","App","page","appear","phoneBookTitle","findContacts","findContactsTitle","ContactLis","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6aa3591f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__24noj\",\"contactListItem\":\"ContactList_contactListItem__K1BXo\",\"button\":\"ContactList_button__1ValF\",\"buttonTitle\":\"ContactList_buttonTitle__2ijgz\",\"contactName\":\"ContactList_contactName__3WYu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"fadeAppTitle_page__2RlXs\",\"phoneBookTitle\":\"fadeAppTitle_phoneBookTitle__C9_1u\",\"findContacts\":\"fadeAppTitle_findContacts__1WmM5\",\"findContactsTitle\":\"fadeAppTitle_findContactsTitle__2Oc30\",\"appear\":\"fadeAppTitle_appear__1Cr0W\",\"appearActive\":\"fadeAppTitle_appearActive__8uFcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContactFormAlert_enter__3ibC5\",\"enterActive\":\"fadeContactFormAlert_enterActive__2nEZL\",\"exit\":\"fadeContactFormAlert_exit__1YSNJ\",\"exitActive\":\"fadeContactFormAlert_exitActive__IyATw\",\"alert\":\"fadeContactFormAlert_alert__2w9HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__mGbB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContactList_enter__18FOV\",\"enterActive\":\"fadeContactList_enterActive__zJQYc\",\"exit\":\"fadeContactList_exit__28EfC\",\"exitActive\":\"fadeContactList_exitActive__1X3AR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAppAlert_enter__3SfM5\",\"enterActive\":\"fadeAppAlert_enterActive__BV4ns\",\"exit\":\"fadeAppAlert_exit__3U8mB\",\"exitActive\":\"fadeAppAlert_exitActive__2ns52\",\"alert\":\"fadeAppAlert_alert__1v3LP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFilter_enter__2uVVS\",\"enterActive\":\"fadeFilter_enterActive__3JdP-\",\"exit\":\"fadeFilter_exit__3EUZe\",\"exitActive\":\"fadeFilter_exitActive__2AeDR\"};","import types from './contacts-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\n// const addContact = (number, name) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuid(),\r\n//     number,\r\n//     name,\r\n//   },\r\n// });\r\n\r\nconst removeContact = createAction('contacts/remove');\r\n\r\n// const removeContact = contactId => ({\r\n//   type: types.REMOVE,\r\n//   payload: contactId,\r\n// });\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// const changeFilter = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport default { addContact, removeContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './contacts-types';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.removeContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.REMOVE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'contacts/filterChange':\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  // combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, contactsReducer),\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// ////////////////////////////////////////////////////\r\n\r\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\n// import contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const middleware = [...getDefaultMiddleware(), logger];\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// export default store;\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport fadeAlert from '../../fadeModules/fadeContactFormAlert.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst INITIAL_STATE = {\n  number: '',\n  name: '',\n  alert: false,\n  message: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = INITIAL_STATE;\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n    const isValidateForm = this.validateForm();\n\n    if (!isValidateForm) return;\n\n    onSubmit(name, number);\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (!name || !number) {\n      this.setState({ alert: true, message: 'Some field is empty' });\n      setTimeout(() => this.setState({ alert: false, message: '' }), 2000);\n      return;\n    }\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact &&\n      this.setState({ alert: true, message: 'This contact already exists' });\n    setTimeout(() => this.setState({ alert: false, message: '' }), 2000);\n    return !isExistContact;\n  };\n\n  resetForm = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, number, alert, message } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={alert}\n          timeout={250}\n          classNames={fadeAlert}\n          unmountOnExit\n        >\n          <p className={fadeAlert.alert}>{message}</p>\n        </CSSTransition>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <section className={s.sectionName}>\n            <label className={s.label}>\n              <p className={s.inputTitle}>Name</p>\n              <input\n                className={s.input}\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </section>\n          <section className={s.sectionNumber}>\n            <label className={s.label}>\n              <p className={s.inputTitle}>Number</p>\n              <input\n                className={s.input}\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </section>\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={s.contactListItem}>\n      <span className={s.contactName}>\n        {name}: {number}{' '}\n      </span>\n\n      <button className={s.button} onClick={() => onRemove(id)}>\n        <p className={s.buttonTitle}>delete</p>\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../fadeModules/fadeContactList.module.css';\nimport ContactListItem from './ContactListItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.contactList}>\n      {contacts.map(contact => (\n        <CSSTransition key={contact.id} timeout={250} classNames={fadeStyles}>\n          <ContactListItem {...contact} onRemove={onRemove} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(contactsActions.removeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filter}>\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { CSSTransition } from 'react-transition-group';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport s from './fadeModules/fadeAppTitle.module.css';\nimport fadeAlert from './fadeModules/fadeAppAlert.module.css';\nimport fadeFilter from './fadeModules/fadeFilter.module.css';\n\nfunction App() {\n  return (\n    <div className={s.page}>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames={s}\n        unmountOnExit\n      >\n        <h1 className={s.phoneBookTitle}>Phonebook</h1>\n      </CSSTransition>\n      <ContactForm />\n      {/* <CSSTransition\n          in={contacts.length > 1}\n          appear={true}\n          timeout={250}\n          unmountOnExit\n          classNames={fadeFilter}\n      > */}\n      <div className={s.findContacts}>\n        <h2 className={s.findContactsTitle}>Find contacts</h2>\n        <Filter />\n      </div>\n      {/* </CSSTransition> */}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Vxgh\",\"sectionName\":\"ContactForm_sectionName__11z7n\",\"sectionNumber\":\"ContactForm_sectionNumber__2DBWJ\",\"label\":\"ContactForm_label__1lxq9\",\"input\":\"ContactForm_input__KIrou\",\"inputTitle\":\"ContactForm_inputTitle__33V53\",\"button\":\"ContactForm_button__3bHnb\"};"],"sourceRoot":""}