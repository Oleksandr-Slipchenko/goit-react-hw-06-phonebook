{"version":3,"sources":["components/ContactList/ContactList.module.css","fadeModules/fadeAppTitle.module.css","fadeModules/fadeContactFormAlert.module.css","components/Filter/Filter.module.css","fadeModules/fadeContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactLis.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","newName","number","payload","id","uuid","name","removeContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","mainStore","persistor","persistStore","INITIAL_STATE","alert","message","ContactForm","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","validateForm","resetForm","setTimeout","isExistContact","find","contact","this","CSSTransition","in","timeout","classNames","fadeAlert","unmountOnExit","className","s","form","sectionName","label","inputTitle","input","type","onChange","sectionNumber","button","Component","connect","dispatch","ContactListItem","onRemove","contactListItem","contactName","onClick","buttonTitle","getVisibleContacts","allContacts","console","log","normalizedFilter","toLowerCase","includes","TransitionGroup","component","contactList","map","fadeStyles","filterInput","App","page","appear","phoneBookTitle","findContacts","findContactsTitle","ContactLis","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4596cf28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__24noj\",\"contactListItem\":\"ContactList_contactListItem__K1BXo\",\"button\":\"ContactList_button__1ValF\",\"buttonTitle\":\"ContactList_buttonTitle__2ijgz\",\"contactName\":\"ContactList_contactName__3WYu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"fadeAppTitle_page__2RlXs\",\"phoneBookTitle\":\"fadeAppTitle_phoneBookTitle__C9_1u\",\"findContacts\":\"fadeAppTitle_findContacts__1WmM5\",\"findContactsTitle\":\"fadeAppTitle_findContactsTitle__2Oc30\",\"appear\":\"fadeAppTitle_appear__1Cr0W\",\"appearActive\":\"fadeAppTitle_appearActive__8uFcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContactFormAlert_enter__3ibC5\",\"enterActive\":\"fadeContactFormAlert_enterActive__2nEZL\",\"exit\":\"fadeContactFormAlert_exit__1YSNJ\",\"exitActive\":\"fadeContactFormAlert_exitActive__IyATw\",\"alert\":\"fadeContactFormAlert_alert__2w9HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__mGbB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContactList_enter__18FOV\",\"enterActive\":\"fadeContactList_enterActive__zJQYc\",\"exit\":\"fadeContactList_exit__28EfC\",\"exitActive\":\"fadeContactList_exitActive__1X3AR\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nconst addContact = createAction('contacts/add', (newName, number) => ({\n  payload: {\n    id: uuid(),\n    name: newName,\n    number,\n  },\n}));\n\nconst removeContact = createAction('contacts/remove');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = {\n  addContact,\n  removeContact,\n  changeFilter,\n};\n\nexport default contactsActions;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.removeContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.REMOVE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case 'contacts/filterChange':\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst mainStore = {\n  store,\n  persistor,\n};\nexport default mainStore;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport fadeAlert from '../../fadeModules/fadeContactFormAlert.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst INITIAL_STATE = {\n  number: '',\n  name: '',\n  alert: false,\n  message: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = INITIAL_STATE;\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n    const isValidateForm = this.validateForm();\n\n    if (!isValidateForm) return;\n\n    onSubmit(name, number);\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (!name || !number) {\n      this.setState({ alert: true, message: 'Some field is empty' });\n      setTimeout(() => this.setState({ alert: false, message: '' }), 2000);\n      return;\n    }\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact &&\n      this.setState({ alert: true, message: 'This contact already exists' });\n    setTimeout(() => this.setState({ alert: false, message: '' }), 2000);\n    return !isExistContact;\n  };\n\n  resetForm = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, number, alert, message } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={alert}\n          timeout={250}\n          classNames={fadeAlert}\n          unmountOnExit\n        >\n          <p className={fadeAlert.alert}>{message}</p>\n        </CSSTransition>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <section className={s.sectionName}>\n            <label className={s.label}>\n              <p className={s.inputTitle}>Name</p>\n              <input\n                className={s.input}\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </section>\n          <section className={s.sectionNumber}>\n            <label className={s.label}>\n              <p className={s.inputTitle}>Number</p>\n              <input\n                className={s.input}\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </section>\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (newName, number) =>\n    dispatch(contactsActions.addContact(newName, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={s.contactListItem}>\n      <span className={s.contactName}>\n        {name}: {number}{' '}\n      </span>\n\n      <button className={s.button} onClick={() => onRemove(id)}>\n        <p className={s.buttonTitle}>delete</p>\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../fadeModules/fadeContactList.module.css';\nimport ContactListItem from './ContactListItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.contactList}>\n      {contacts.map(contact => (\n        <CSSTransition key={contact.id} timeout={250} classNames={fadeStyles}>\n          <ContactListItem {...contact} onRemove={onRemove} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  console.log(allContacts);\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(contactsActions.removeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filter}>\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { CSSTransition } from 'react-transition-group';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport s from './fadeModules/fadeAppTitle.module.css';\n// import fadeAlert from './fadeModules/fadeAppAlert.module.css';\n// import fadeFilter from './fadeModules/fadeFilter.module.css';\n\nfunction App() {\n  return (\n    <div className={s.page}>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames={s}\n        unmountOnExit\n      >\n        <h1 className={s.phoneBookTitle}>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      {/* <CSSTransition\n        in={contacts.length > 1}\n        appear={true}\n        timeout={250}\n        unmountOnExit\n        classNames={fadeFilter}\n      > */}\n      <div className={s.findContacts}>\n        <h2 className={s.findContactsTitle}>Find contacts</h2>\n        <Filter />\n      </div>\n      {/* </CSSTransition> */}\n\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport mainStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={mainStore.store}>\n    <PersistGate loading={null} persistor={mainStore.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Vxgh\",\"sectionName\":\"ContactForm_sectionName__11z7n\",\"sectionNumber\":\"ContactForm_sectionNumber__2DBWJ\",\"label\":\"ContactForm_label__1lxq9\",\"input\":\"ContactForm_input__KIrou\",\"inputTitle\":\"ContactForm_inputTitle__33V53\",\"button\":\"ContactForm_button__3bHnb\"};"],"sourceRoot":""}